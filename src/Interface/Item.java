/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Database_Connection.DB;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author
 */
public class Item extends javax.swing.JFrame {

    /**
     * Creates new form Item
     */
    public Item() {
        initComponents();
        setIcon();
        DateandTime();
        item_text_clean();
        Item_Table_Loader_Data();
        Item_ID_Auto_Loader();
        jtbl_Item.getTableHeader().setFont(new Font("Helvetica", Font.PLAIN, 16));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jCmb_Item_Status = new javax.swing.JComboBox();
        jbtn_Item_Save = new javax.swing.JButton();
        jtxt_Item_barcode = new javax.swing.JTextField();
        jtxt_Item_Name = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbl_Item = new javax.swing.JTable();
        jtxt_Item_Search = new javax.swing.JTextField();
        jbtn_Item_Clear = new javax.swing.JButton();
        jbtn_Item_Update = new javax.swing.JButton();
        jlbl_Item_Item_ID = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        lbl_Time = new javax.swing.JLabel();
        lbl_Date = new javax.swing.JLabel();
        lbl_Time1 = new javax.swing.JLabel();
        lbl_Date1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel8MouseEntered(evt);
            }
        });
        jPanel8.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel8KeyPressed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jLabel18.setText("Item ID");

        jLabel19.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jLabel19.setText("Barcode");

        jLabel20.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jLabel20.setText("Name");

        jLabel23.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jLabel23.setText("Search");

        jCmb_Item_Status.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jCmb_Item_Status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Deactive" }));
        jCmb_Item_Status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCmb_Item_StatusActionPerformed(evt);
            }
        });
        jCmb_Item_Status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCmb_Item_StatusKeyPressed(evt);
            }
        });

        jbtn_Item_Save.setBackground(new java.awt.Color(255, 255, 255));
        jbtn_Item_Save.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jbtn_Item_Save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/save-color-24.png"))); // NOI18N
        jbtn_Item_Save.setText("Save");
        jbtn_Item_Save.setFocusable(false);
        jbtn_Item_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_Item_SaveActionPerformed(evt);
            }
        });

        jtxt_Item_barcode.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jtxt_Item_barcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_Item_barcodeActionPerformed(evt);
            }
        });
        jtxt_Item_barcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxt_Item_barcodeKeyReleased(evt);
            }
        });

        jtxt_Item_Name.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jtxt_Item_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_Item_NameActionPerformed(evt);
            }
        });

        jtbl_Item.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jtbl_Item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Barcode", "Item Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_Item.setFocusable(false);
        jtbl_Item.setRowHeight(20);
        jtbl_Item.getTableHeader().setReorderingAllowed(false);
        jtbl_Item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_ItemMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtbl_Item);
        if (jtbl_Item.getColumnModel().getColumnCount() > 0) {
            jtbl_Item.getColumnModel().getColumn(0).setMinWidth(100);
            jtbl_Item.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtbl_Item.getColumnModel().getColumn(0).setMaxWidth(100);
            jtbl_Item.getColumnModel().getColumn(1).setMinWidth(150);
            jtbl_Item.getColumnModel().getColumn(1).setPreferredWidth(150);
            jtbl_Item.getColumnModel().getColumn(1).setMaxWidth(150);
            jtbl_Item.getColumnModel().getColumn(3).setMinWidth(100);
            jtbl_Item.getColumnModel().getColumn(3).setPreferredWidth(100);
            jtbl_Item.getColumnModel().getColumn(3).setMaxWidth(100);
        }

        jtxt_Item_Search.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jtxt_Item_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxt_Item_SearchKeyReleased(evt);
            }
        });

        jbtn_Item_Clear.setBackground(new java.awt.Color(255, 255, 255));
        jbtn_Item_Clear.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jbtn_Item_Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/clear-color-24.png"))); // NOI18N
        jbtn_Item_Clear.setText("Clear");
        jbtn_Item_Clear.setFocusable(false);
        jbtn_Item_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_Item_ClearActionPerformed(evt);
            }
        });

        jbtn_Item_Update.setBackground(new java.awt.Color(255, 255, 255));
        jbtn_Item_Update.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jbtn_Item_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/update-color-24.png"))); // NOI18N
        jbtn_Item_Update.setText("Update");
        jbtn_Item_Update.setFocusable(false);
        jbtn_Item_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_Item_UpdateActionPerformed(evt);
            }
        });

        jlbl_Item_Item_ID.setFont(new java.awt.Font("Euphemia", 0, 18)); // NOI18N
        jlbl_Item_Item_ID.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jlbl_Item_Item_ID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxt_Item_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtxt_Item_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCmb_Item_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jbtn_Item_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbtn_Item_Update)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jbtn_Item_Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(490, 490, 490))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxt_Item_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 944, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlbl_Item_Item_ID, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jtxt_Item_barcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jtxt_Item_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCmb_Item_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_Item_Save)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxt_Item_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_Item_Update)
                    .addComponent(jbtn_Item_Clear))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/MINO TOP LOGO.png"))); // NOI18N

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/minimize-38_1.png"))); // NOI18N
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Home-38_1.png"))); // NOI18N
        jButton2.setContentAreaFilled(false);
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Lock-38_1.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.setFocusable(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-cancel-38.png"))); // NOI18N
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbl_Time.setFont(new java.awt.Font("Euphemia", 0, 16)); // NOI18N
        lbl_Time.setText("Time");

        lbl_Date.setFont(new java.awt.Font("Euphemia", 0, 16)); // NOI18N
        lbl_Date.setText("Date");

        lbl_Time1.setFont(new java.awt.Font("Euphemia", 0, 30)); // NOI18N
        lbl_Time1.setForeground(new java.awt.Color(204, 204, 204));
        lbl_Time1.setText("Items");

        lbl_Date1.setBackground(new java.awt.Color(255, 255, 255));
        lbl_Date1.setFont(new java.awt.Font("Euphemia", 0, 16)); // NOI18N
        lbl_Date1.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Date1.setText("Date");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Time, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(lbl_Date1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(67, 67, 67)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_Time1)
                .addGap(70, 70, 70)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lbl_Time)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Date)
                            .addComponent(lbl_Date1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Time1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCmb_Item_StatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCmb_Item_StatusKeyPressed
        char c1 = evt.getKeyChar();
        if (c1 == evt.VK_ENTER) {

            if (!jlbl_Item_Item_ID.getText().isEmpty() && !jtxt_Item_Name.getText().isEmpty()) {
            try {
                int Status = 0;

                if (jCmb_Item_Status.getSelectedItem().toString().equals("Active")) {
                    Status += 1;
                }
                if (jCmb_Item_Status.getSelectedItem().toString().equals("Deactive")) {
                    Status += 0;
                }

                new Database_Connection.DB().putData("insert into item (item_id,barcode,item_name,status) values('" + jlbl_Item_Item_ID.getText() + "','" + jtxt_Item_barcode.getText() + "','" + jtxt_Item_Name.getText() + "','" + Status + "')");
                JOptionPane.showMessageDialog(this, "Item Registered Successfully", "Successfully Message", JOptionPane.INFORMATION_MESSAGE);

                item_text_clean();
                jtxt_Item_barcode.grabFocus();

            } catch (Exception e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Check All Input Field", "Information Message", JOptionPane.INFORMATION_MESSAGE);
        }
        }
    }//GEN-LAST:event_jCmb_Item_StatusKeyPressed

    private void jbtn_Item_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_Item_SaveActionPerformed
        if (!jlbl_Item_Item_ID.getText().isEmpty() && !jtxt_Item_Name.getText().isEmpty()) {
            try {
                int Status = 0;

                if (jCmb_Item_Status.getSelectedItem().toString().equals("Active")) {
                    Status += 1;
                }
                if (jCmb_Item_Status.getSelectedItem().toString().equals("Deactive")) {
                    Status += 0;
                }

                new Database_Connection.DB().putData("insert into item (item_id,barcode,item_name,status) values('" + jlbl_Item_Item_ID.getText() + "','" + jtxt_Item_barcode.getText() + "','" + jtxt_Item_Name.getText() + "','" + Status + "')");
                JOptionPane.showMessageDialog(this, "Item Registered Successfully", "Successfully Message", JOptionPane.INFORMATION_MESSAGE);

                item_text_clean();
                jtxt_Item_barcode.grabFocus();

            } catch (Exception e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Check All Input Field", "Information Message", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jbtn_Item_SaveActionPerformed

    private void jtxt_Item_barcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_Item_barcodeActionPerformed
        jtxt_Item_Name.grabFocus();
    }//GEN-LAST:event_jtxt_Item_barcodeActionPerformed

    private void jtxt_Item_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_Item_NameActionPerformed
        jCmb_Item_Status.grabFocus();
    }//GEN-LAST:event_jtxt_Item_NameActionPerformed

    private void jtbl_ItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_ItemMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) jtbl_Item.getModel();
        int Selected_Row = jtbl_Item.getSelectedRow();
        jlbl_Item_Item_ID.setText(dtm.getValueAt(Selected_Row, 0).toString());
        try {
            ResultSet rs = new Database_Connection.DB().getData("SELECT * FROM item WHERE item_id = '" + jlbl_Item_Item_ID.getText() + "'");
            while (rs.next()) {
                jtxt_Item_barcode.setText(rs.getString("barcode"));
                jtxt_Item_Name.setText(rs.getString("item_name"));
                if (rs.getString("status").equals("1")) {
                    jCmb_Item_Status.setSelectedItem("Active");
                } else {
                    jCmb_Item_Status.setSelectedItem("Deactive");
                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jtbl_ItemMouseClicked

    private void jtxt_Item_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_Item_SearchKeyReleased
        DefaultTableModel dtm = (DefaultTableModel) jtbl_Item.getModel();
        try {
            ResultSet rs = new DB().getData("select * from item where item_name like '%" + jtxt_Item_Search.getText() + "%'");
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("item_id"));
                v.add(rs.getString("barcode"));
                v.add(rs.getString("item_name"));
                if (rs.getString("status").equals("1")) {
                    v.add("Active");
                }
                if (rs.getString("status").equals("0")) {
                    v.add("Deactive");
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jtxt_Item_SearchKeyReleased

    private void jbtn_Item_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_Item_ClearActionPerformed
        item_text_clean();
    }//GEN-LAST:event_jbtn_Item_ClearActionPerformed

    private void jbtn_Item_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_Item_UpdateActionPerformed

        if (!jlbl_Item_Item_ID.getText().isEmpty() && !jtxt_Item_Name.getText().isEmpty()) {
            try {
                int Status = 0;

                if (jCmb_Item_Status.getSelectedItem().toString().equals("Active")) {
                    Status += 1;
                }
                if (jCmb_Item_Status.getSelectedItem().toString().equals("Deactive")) {
                    Status += 0;
                }
                new DB().putData("UPDATE item SET barcode='" + jtxt_Item_barcode.getText() + "',item_name='" + jtxt_Item_Name.getText() + "',status='" + Status + "' WHERE item_id = '" + jlbl_Item_Item_ID.getText() + "'");
                JOptionPane.showMessageDialog(this, "Item Details Updated Successfully", "Successfully Message", JOptionPane.INFORMATION_MESSAGE);

                item_text_clean();

            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_jbtn_Item_UpdateActionPerformed

    private void jPanel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseEntered
        //        jtxt_Itm_barcode.grabFocus();
    }//GEN-LAST:event_jPanel8MouseEntered

    private void jPanel8KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel8KeyPressed
        char c1 = evt.getKeyChar();
        if (c1 == evt.VK_ENTER) {

            jtxt_Item_barcode.grabFocus();
        }
    }//GEN-LAST:event_jPanel8KeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            setExtendedState(Customer.ICONIFIED);
            new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + Login.User_Name + "','" + lbl_Date1.getText() + "','" + lbl_Time.getText() + "','System Minimized')");
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + Login.User_Name  + "','" + lbl_Date1.getText() + "','" + lbl_Time.getText() + "','Back Logged into to Admin Menu')");
        new Admin_Menu().setVisible(true);
        this.dispose();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + Login.User_Name + "','" + lbl_Date1.getText() + "','" + lbl_Time.getText() + "','Back Logged into to Login')");
            new Login().setVisible(true);
            this.dispose();
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" +  Login.User_Name  + "','" + lbl_Date1.getText() + "','" + lbl_Time.getText() + "','Has been Exit from the System')");
            System.exit(0);
        } catch (Exception ex) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtxt_Item_barcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxt_Item_barcodeKeyReleased
        if (!jtxt_Item_barcode.getText().isEmpty()) {

            try {
                ResultSet rs = new DB().getData("select * from item where barcode = '" + jtxt_Item_barcode.getText() + "'");
                if (rs.next()) {
                    jlbl_Item_Item_ID.setText(rs.getString("item_id"));
                    jtxt_Item_Name.setText(rs.getString("item_name"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            Item_ID_Auto_Loader();
            jtxt_Item_Name.setText(null);
        }
    }//GEN-LAST:event_jtxt_Item_barcodeKeyReleased

    private void jCmb_Item_StatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCmb_Item_StatusActionPerformed
        jbtn_Item_Save.grabFocus();
    }//GEN-LAST:event_jCmb_Item_StatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Item.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Item().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jCmb_Item_Status;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbtn_Item_Clear;
    private javax.swing.JButton jbtn_Item_Save;
    private javax.swing.JButton jbtn_Item_Update;
    private javax.swing.JLabel jlbl_Item_Item_ID;
    private javax.swing.JTable jtbl_Item;
    private javax.swing.JTextField jtxt_Item_Name;
    private javax.swing.JTextField jtxt_Item_Search;
    private javax.swing.JTextField jtxt_Item_barcode;
    private javax.swing.JLabel lbl_Date;
    private javax.swing.JLabel lbl_Date1;
    private javax.swing.JLabel lbl_Time;
    private javax.swing.JLabel lbl_Time1;
    // End of variables declaration//GEN-END:variables

    private void DateandTime() {
        Timer t = new Timer(100, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat sdf_Time = new SimpleDateFormat("hh:mm:ss aa");
                SimpleDateFormat sdf_Date = new SimpleDateFormat("YYYY  MMMM  dd EEEE");
                SimpleDateFormat sdf_Date1 = new SimpleDateFormat("YYYY-MM-dd");
                String time = sdf_Time.format(d);
                String Date = sdf_Date.format(d);
                String Date1 = sdf_Date1.format(d);
                lbl_Time.setText(time);
                lbl_Date.setText(Date);
                lbl_Date1.setText(Date1);
            }
        });
        t.start();
    }

    private void item_text_clean() {
        jtxt_Item_barcode.setText(null);
        jtxt_Item_Name.setText(null);
        jCmb_Item_Status.setSelectedIndex(0);
        jtxt_Item_Search.setText(null);
        Item_ID_Auto_Loader();
        Item_Table_Loader_Data();
    }

    private void Item_ID_Auto_Loader() {
        try {
            ResultSet rs = new Database_Connection.DB().getData("SELECT MAX(item_id) AS LargestID FROM item;");
            if (rs.next()) {
                String id = rs.getString("LargestID");
                jlbl_Item_Item_ID.setText(Integer.parseInt(id) + 1 + "");
            }
        } catch (Exception e) {
            System.out.println(e);
            jlbl_Item_Item_ID.setText("10000");
            jtxt_Item_barcode.grabFocus();
        }
    }

    private void Item_Table_Loader_Data() {
        DefaultTableModel dtm = (DefaultTableModel) jtbl_Item.getModel();
        dtm.setRowCount(0);
        try {
            ResultSet set = new DB().getData("Select * from item");

            while (set.next()) {
                Vector v = new Vector();
                v.add(set.getString("item_id"));
                v.add(set.getString("barcode"));
                v.add(set.getString("item_name"));
                if (set.getString("status").equals("1")) {
                    v.add("Active");
                }
                if (set.getString("status").equals("0")) {
                    v.add("Deactive");
                }
                dtm.addRow(v);
            }
        } catch (Exception e) {
        }
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icon.png")));
    }

}
