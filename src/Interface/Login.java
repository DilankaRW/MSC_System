/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Database_Connection.DB;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author User
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        clearText();
        setIcon();
        DateandTime();
    }

    public static String User_Name = "Guest User";
    public static String User_Type = "Guest Type";
    public static String User_Password = "Guest Password";
    public static int User_ID = 1;

    private void clearText() {
        jtxt_User_Name.setText(null);
        jPasswordField1.setText(null);
    }

    private static int Login_count = 0;

    private static int getResultSetRowCount(ResultSet resultSet) {
        int size = 0;
        try {
            resultSet.last();
            size = resultSet.getRow();
            resultSet.beforeFirst();
        } catch (Exception e) {
            return 0;
        }
        return size;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxt_User_Name = new javax.swing.JTextField();
        jbtn_Login = new javax.swing.JButton();
        jbtn_Reset = new javax.swing.JButton();
        jbtn_Close = new javax.swing.JButton();
        jPasswordField1 = new javax.swing.JPasswordField();
        lbl_Date = new javax.swing.JLabel();
        lbl_Time = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 204)));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/MINO LOGIN LOGO.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("User Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Password");

        jtxt_User_Name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jtxt_User_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_User_NameActionPerformed(evt);
            }
        });

        jbtn_Login.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtn_Login.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-enter-26.png"))); // NOI18N
        jbtn_Login.setText("Login");
        jbtn_Login.setFocusable(false);
        jbtn_Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_LoginActionPerformed(evt);
            }
        });
        jbtn_Login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtn_LoginKeyPressed(evt);
            }
        });

        jbtn_Reset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtn_Reset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/password-reset-30.png"))); // NOI18N
        jbtn_Reset.setText("Reset");
        jbtn_Reset.setFocusable(false);
        jbtn_Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_ResetActionPerformed(evt);
            }
        });

        jbtn_Close.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jbtn_Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/closered.png"))); // NOI18N
        jbtn_Close.setText("Close");
        jbtn_Close.setFocusable(false);
        jbtn_Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_CloseActionPerformed(evt);
            }
        });

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });

        lbl_Date.setBackground(new java.awt.Color(255, 255, 255));
        lbl_Date.setFont(new java.awt.Font("Euphemia", 0, 16)); // NOI18N
        lbl_Date.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Date.setText("Date");

        lbl_Time.setBackground(new java.awt.Color(255, 255, 255));
        lbl_Time.setFont(new java.awt.Font("Euphemia", 0, 16)); // NOI18N
        lbl_Time.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Time.setText("Time");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Time, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(154, 154, 154))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbtn_Login, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtn_Reset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtn_Close, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(16, 16, 16)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtxt_User_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxt_User_Name)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPasswordField1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_Login, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtn_Reset)
                    .addComponent(jbtn_Close, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_Time)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_Date))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtn_LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_LoginActionPerformed
        try {
            String pass;
            String user;
            user = jtxt_User_Name.getText();
            pass = jPasswordField1.getText();

            User_Name = ("Tech Support");

            if (pass.equals("123") && user.equals("AAA")) {
                new Tech_Support_Backup_And_Restore().setVisible(true);
                this.dispose();
            } else {

                ResultSet rs = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" + jPasswordField1.getText() + "' and user_type = 'admin' and status = '1'");
                if (getResultSetRowCount(rs) == 1) {
                    User_Name = jtxt_User_Name.getText();
                    User_Type = "Admin";
                    while (rs.next()) {
                        User_ID = Integer.parseInt(rs.getString("user_id"));
                    }
                    new Admin_Menu().setVisible(true);
                    new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + jtxt_User_Name.getText() + "','" + lbl_Date.getText() + "','" + lbl_Time.getText() + "','Login Admin Menu')");
                    this.dispose();
                    clearText();
                } else {
                    ResultSet rs2 = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" + jPasswordField1.getText() + "' and user_type = 'user' and status = '1'");
                    if (getResultSetRowCount(rs2) == 1) {
                        User_Name = jtxt_User_Name.getText();
                        User_Type = "User";
                        while (rs2.next()) {
                            User_ID = Integer.parseInt(rs2.getString("user_id"));
                        }
                        new User_Menu().setVisible(true);
                        new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + jtxt_User_Name.getText() + "','" + lbl_Date.getText() + "','" + lbl_Time.getText() + "','Login User Menu')");
                        this.dispose();
                        clearText();
                    } else {
                        Login_count++;
                        if (Login_count <= 3) {
                            if (getResultSetRowCount(rs2) == 0) {
                                JOptionPane.showMessageDialog(this, "You Entered Username or Password Incorrect Please Check and Enter again", "Error Message", JOptionPane.ERROR_MESSAGE);
                                clearText();
                                jtxt_User_Name.grabFocus();
                                System.out.println("Login Count is : " + Login_count);
                                System.out.println(" ");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Your system is locked! \n Please Call Your System Administrator.", "Error Message", JOptionPane.ERROR_MESSAGE);
                            new Database_Connection.DB().putData("Update user Set status = '0' Where user_name='" + jtxt_User_Name.getText() + "'");
                            clearText();
                            jPasswordField1.setEditable(false);
                            jtxt_User_Name.setEditable(false);
                            jbtn_Login.setVisible(false);
                            System.out.println("System Locked .....");
                        }
                    }
                }
            }
            System.out.println("End .... ");
            System.out.println("--------------------------------------------------------------------------------------------");
        } catch (Exception ex) {
            System.out.println(ex);
        }

    }//GEN-LAST:event_jbtn_LoginActionPerformed

    private void jbtn_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_ResetActionPerformed
        jtxt_User_Name.setText(null);
        jPasswordField1.setText(null);
    }//GEN-LAST:event_jbtn_ResetActionPerformed

    private void jbtn_CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_CloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbtn_CloseActionPerformed

    private void jtxt_User_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_User_NameActionPerformed
        jPasswordField1.grabFocus();
    }//GEN-LAST:event_jtxt_User_NameActionPerformed

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased

    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jbtn_LoginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtn_LoginKeyPressed
//        try {
//            ResultSet rs = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" +jPasswordField1.getText() + "' and user_type = 'admin' and status = '1'");
//            if (getResultSetRowCount(rs) == 1) {
//                User_Name = jtxt_User_Name.getText();
//                User_Type = "admin";
//                while (rs.next()) {
//                    User_ID = Integer.parseInt(rs.getString("user_id"));
//                }
//                new Admin_Main().setVisible(true);
//                this.dispose();
//                clearText();
//            } else {
//                ResultSet rs2 = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" + jPasswordField1.getText() + "' and user_type = 'user' and status = '1'");
//                if (getResultSetRowCount(rs2) == 1) {
//                    User_Name = jtxt_User_Name.getText();
//                    User_Type = "user";
//                    while (rs2.next()) {
//                        User_ID = Integer.parseInt(rs2.getString("user_id"));
//                    }
//                    new Admin_Main().setVisible(true);
//                    this.dispose();
//                    clearText();
//                } else {
//                    Login_count++;
//                    if (Login_count <= 3) {
//                        if (getResultSetRowCount(rs2) == 0) {
//                            JOptionPane.showMessageDialog(this, "You Entered Username or Password Incorrect Please Check and Enter again", "Error Message", JOptionPane.ERROR_MESSAGE);
//                            clearText();
//                            System.out.println("Login Count is : " + Login_count);
//                            System.out.println(" ");
//                        }
//                    } else {
//                        JOptionPane.showMessageDialog(this, "Your system is locked!   \nPlease Call Your System Administrator.", "Error Message", JOptionPane.ERROR_MESSAGE);
//                        clearText();
//                        jPasswordField1.setEditable(false);
//                        jtxt_User_Name.setEditable(false);
//                        jbtn_Login.setVisible(false);
//                        System.out.println("System Locked .....");
//                    }
//                }
//            }
//            System.out.println("End .... ");
//            System.out.println("--------------------------------------------------------------------------------------------");
//        } catch (Exception ex) {
//            System.out.println(ex);
//        }
    }//GEN-LAST:event_jbtn_LoginKeyPressed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        jbtn_Login.grabFocus();
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        char c = evt.getKeyChar();
        if (c == evt.VK_ENTER) {
            
            try {
            String pass;
            String user;
            user = jtxt_User_Name.getText();
            pass = jPasswordField1.getText();

            User_Name = ("Tech Support");

            if (pass.equals("123") && user.equals("AAA")) {
                new Tech_Support_Backup_And_Restore().setVisible(true);
                this.dispose();
            } else {

                ResultSet rs = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" + jPasswordField1.getText() + "' and user_type = 'admin' and status = '1'");
                if (getResultSetRowCount(rs) == 1) {
                    User_Name = jtxt_User_Name.getText();
                    User_Type = "Admin";
                    while (rs.next()) {
                        User_ID = Integer.parseInt(rs.getString("user_id"));
                    }
                    new Admin_Menu().setVisible(true);
                    new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + jtxt_User_Name.getText() + "','" + lbl_Date.getText() + "','" + lbl_Time.getText() + "','Login Admin Menu')");
                    this.dispose();
                    clearText();
                } else {
                    ResultSet rs2 = new Database_Connection.DB().getData("SELECT * FROM user where user_name='" + jtxt_User_Name.getText() + "'and password = '" + jPasswordField1.getText() + "' and user_type = 'user' and status = '1'");
                    if (getResultSetRowCount(rs2) == 1) {
                        User_Name = jtxt_User_Name.getText();
                        User_Type = "User";
                        while (rs2.next()) {
                            User_ID = Integer.parseInt(rs2.getString("user_id"));
                        }
                        new User_Menu().setVisible(true);
                        new DB().putData("INSERT INTO logger (user_name,date, time,description) VALUE('" + jtxt_User_Name.getText() + "','" + lbl_Date.getText() + "','" + lbl_Time.getText() + "','Login User Menu')");
                        this.dispose();
                        clearText();
                    } else {
                        Login_count++;
                        if (Login_count <= 3) {
                            if (getResultSetRowCount(rs2) == 0) {
                                JOptionPane.showMessageDialog(this, "You Entered Username or Password Incorrect Please Check and Enter again", "Error Message", JOptionPane.ERROR_MESSAGE);
                                clearText();
                                jtxt_User_Name.grabFocus();
                                System.out.println("Login Count is : " + Login_count);
                                System.out.println(" ");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Your system is locked! \n Please Call Your System Administrator.", "Error Message", JOptionPane.ERROR_MESSAGE);
                            new Database_Connection.DB().putData("Update user Set status = '0' Where user_name='" + jtxt_User_Name.getText() + "'");
                            clearText();
                            jPasswordField1.setEditable(false);
                            jtxt_User_Name.setEditable(false);
                            jbtn_Login.setVisible(false);
                            System.out.println("System Locked .....");
                        }
                    }
                }
            }
            System.out.println("End .... ");
            System.out.println("--------------------------------------------------------------------------------------------");
        } catch (Exception ex) {
            System.out.println(ex);
        }
            
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JButton jbtn_Close;
    private javax.swing.JButton jbtn_Login;
    private javax.swing.JButton jbtn_Reset;
    private javax.swing.JTextField jtxt_User_Name;
    private javax.swing.JLabel lbl_Date;
    private javax.swing.JLabel lbl_Time;
    // End of variables declaration//GEN-END:variables

    private void DateandTime() {
        Timer t = new Timer(100, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat sdf_Time = new SimpleDateFormat("hh:mm:ss aa");
                SimpleDateFormat sdf_Date = new SimpleDateFormat("YYYY-MM-dd");
                String time = sdf_Time.format(d);
                String Date = sdf_Date.format(d);
                lbl_Time.setText(time);
                lbl_Date.setText(Date);
            }
        });
        t.start();
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Icon.png")));
    }
}
